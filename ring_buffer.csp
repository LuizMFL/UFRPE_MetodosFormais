-- Ring Buffer (https://blog.pantuza.com/artigos/ring-buffer)
-- Lista circular usada para armazenar informações e que possui um tamanho fixo em que o fim se conecta com o início
-- O acesso aos dados segue a regra FIFO (First-in, First-out)
-- 2 variáveis que armazenam o início e fim da fila
-- Tanto a inserção e remoção é feita em tempo constante
-- Cada área da lista (ou célula) é um processo CSP
-- Existe um processo controlador que gerencia a inserção e a remoção dos elementos nas células do Ring Buffer.
-- Os processos das células rodam em paralelo mas sem comunicação entre eles
-- Há sincronização entre o processo do controlador e o processo das células.
-- Verifique que ela é livre de deadlock e não determinismo.

channel out, in, print: { 0..10 }.{ 0..100}

QUEUE = <(-1),(-1),(-1),(-1),(-1),(-1),(-1),(-1),(-1),(-1)>

P(id) = 
    out?id?x -> SKIP

add(value, queue, tail_index) = 
    if ( queue == <> ) then
        <>
    else if ( tail_index == 0 ) then
        <value>^tail(queue)
    else
        <head(queue)>^add(value, tail(queue), tail_index - 1)

REMOVE(queue, head_value, index) = 
    
RUN_OUT(queue, id) =
    
    out.id & done?id -> SKIP

RING_BUFFER(queue, head, tail) =
    head != tail -> {
        
    }